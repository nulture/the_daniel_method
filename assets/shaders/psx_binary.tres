[gd_resource type="VisualShader" load_steps=27 format=3 uid="uid://cnwsct4vc8sqr"]

[sub_resource type="VisualShaderNodeVectorLen" id="VisualShaderNodeVectorLen_qmkws"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_r2jyq"]
output_port_for_preview = 0
default_input_values = [0, 0.45, 1, 5.0, 2, 0.1, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_m87d3"]
input_name = "inv_view_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_58yf7"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0830b"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_14x4q"]
parameter_name = "ring_color"
default_value_enabled = true

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_3fjwc"]
parameter_name = "albedo_winter"
texture_type = 1
texture_filter = 1

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_sbor4"]
parameter_name = "ring_thickness"
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_tw8xg"]
parameter_name = "ring_radius"
qualifier = 1
default_value = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ys7op"]
operator = 1

[sub_resource type="VisualShaderNodeVec3Parameter" id="VisualShaderNodeVec3Parameter_r2yka"]
parameter_name = "ring_position"
qualifier = 1
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_y5e5j"]
output_port_for_preview = 0
default_input_values = [0, 0.45, 1, 5.0, 2, 0.1, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeTextureParameterTriplanar" id="VisualShaderNodeTextureParameterTriplanar_k65cl"]
parameter_name = "ring_texture"
qualifier = 1
texture_type = 1
texture_filter = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_n3048"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_njngw"]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_5plgy"]
parameter_name = "albedo_summer"
texture_type = 1
texture_filter = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5sdqx"]
source = 5
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_u25tb"]
input_name = "modelview_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_2pjnr"]

[sub_resource type="VisualShaderNodeTransformFunc" id="VisualShaderNodeTransformFunc_pouib"]

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_qkurx"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bk0f0"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_jjnmx"]
parameter_name = "scale"
default_value_enabled = true
default_value = 0.04

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_yx5i5"]
operator = 3

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_b2yql"]
function = 17

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bt154"]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, vertex_lighting;

uniform float scale = 0.03999999910593;
global uniform vec3 ring_position = vec3(0.000000, 0.000000, 0.000000);
global uniform float ring_radius;
uniform float ring_thickness = 1;
global uniform sampler2D ring_texture : source_color, filter_nearest;
uniform sampler2D albedo_winter : source_color, filter_nearest;
uniform sampler2D albedo_summer : source_color, filter_nearest;


// TextureParameterTriplanar
	vec4 triplanar_texture(sampler2D p_sampler, vec3 p_weights, vec3 p_triplanar_pos) {
		vec4 samp = vec4(0.0);
		samp += texture(p_sampler, p_triplanar_pos.xy) * p_weights.z;
		samp += texture(p_sampler, p_triplanar_pos.xz) * p_weights.y;
		samp += texture(p_sampler, p_triplanar_pos.zy * vec2(-1.0, 1.0)) * p_weights.x;
		return samp;
	}

	uniform vec3 triplanar_scale = vec3(1.0, 1.0, 1.0);
	uniform vec3 triplanar_offset;
	uniform float triplanar_sharpness = 0.5;

	varying vec3 triplanar_power_normal;
	varying vec3 triplanar_pos;

void vertex() {
// TextureParameterTriplanar
	{
		triplanar_power_normal = pow(abs(NORMAL), vec3(triplanar_sharpness));
		triplanar_power_normal /= dot(triplanar_power_normal, vec3(1.0));
		triplanar_pos = VERTEX * triplanar_scale + triplanar_offset;
		triplanar_pos *= vec3(1.0, -1.0, 1.0);
	}
// Input:10
	mat4 n_out10p0 = MODELVIEW_MATRIX;


// TransformFunc:12
	mat4 n_out12p0 = inverse(n_out10p0);


// Input:2
	vec3 n_out2p0 = VERTEX;


// TransformVectorMult:11
	vec3 n_out11p0 = (n_out10p0 * vec4(n_out2p0, 1.0)).xyz;


// FloatParameter:3
	float n_out3p0 = scale;


// VectorOp:4
	vec3 n_out4p0 = n_out11p0 / vec3(n_out3p0);


// VectorFunc:5
	vec3 n_out5p0 = floor(n_out4p0);


// VectorOp:6
	vec3 n_out6p0 = n_out5p0 * vec3(n_out3p0);


// TransformVectorMult:13
	vec3 n_out13p0 = (n_out12p0 * vec4(n_out6p0, 1.0)).xyz;


// Output:0
	VERTEX = n_out13p0;


}

void fragment() {
// Vector3Parameter:23
	vec3 n_out23p0 = ring_position;


// Input:16
	mat4 n_out16p0 = INV_VIEW_MATRIX;


// Input:18
	vec3 n_out18p0 = VERTEX;


// TransformVectorMult:17
	vec3 n_out17p0 = (n_out16p0 * vec4(n_out18p0, 1.0)).xyz;


// VectorOp:22
	vec3 n_out22p0 = n_out23p0 - n_out17p0;


// VectorLen:11
	float n_out11p0 = length(n_out22p0);


// FloatParameter:21
	float n_out21p0 = ring_radius;


// FloatParameter:20
	float n_out20p0 = ring_thickness;


// Input:26
	vec2 n_out26p0 = SCREEN_UV;


// TextureParameterTriplanar:25
	vec4 n_out25p0 = triplanar_texture(ring_texture, triplanar_power_normal, vec3(n_out26p0, 0.0));


	vec4 n_out6p0;
// Texture2D:6
	n_out6p0 = texture(albedo_winter, UV);


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(albedo_summer, UV);


	vec3 n_out13p0;
// If:13
	if(abs(n_out11p0 - n_out21p0) < n_out20p0)
	{
		n_out13p0 = vec3(n_out25p0.xyz);
	}
	else if(n_out11p0 < n_out21p0)
	{
		n_out13p0 = vec3(n_out9p0.xyz);
	}
	else
	{
		n_out13p0 = vec3(n_out6p0.xyz);
	}


	vec3 n_out24p0;
// If:24
	vec3 n_in24p4 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in24p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out11p0 - n_out21p0) < n_out20p0)
	{
		n_out24p0 = vec3(n_out25p0.xyz);
	}
	else if(n_out11p0 < n_out21p0)
	{
		n_out24p0 = n_in24p5;
	}
	else
	{
		n_out24p0 = n_in24p4;
	}


// Output:0
	ALBEDO = n_out13p0;
	EMISSION = n_out24p0;


}
"
flags/vertex_lighting = true
nodes/vertex/0/position = Vector2(800, 40)
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_bk0f0")
nodes/vertex/2/position = Vector2(-560, 300)
nodes/vertex/3/node = SubResource("VisualShaderNodeFloatParameter_jjnmx")
nodes/vertex/3/position = Vector2(-560, 480)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorOp_yx5i5")
nodes/vertex/4/position = Vector2(60, 160)
nodes/vertex/5/node = SubResource("VisualShaderNodeVectorFunc_b2yql")
nodes/vertex/5/position = Vector2(200, 160)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorOp_bt154")
nodes/vertex/6/position = Vector2(360, 160)
nodes/vertex/10/node = SubResource("VisualShaderNodeInput_u25tb")
nodes/vertex/10/position = Vector2(-560, 60)
nodes/vertex/11/node = SubResource("VisualShaderNodeTransformVecMult_2pjnr")
nodes/vertex/11/position = Vector2(-200, 160)
nodes/vertex/12/node = SubResource("VisualShaderNodeTransformFunc_pouib")
nodes/vertex/12/position = Vector2(-200, 60)
nodes/vertex/13/node = SubResource("VisualShaderNodeTransformVecMult_qkurx")
nodes/vertex/13/position = Vector2(600, 40)
nodes/vertex/connections = PackedInt32Array(3, 0, 4, 1, 4, 0, 5, 0, 5, 0, 6, 0, 3, 0, 6, 1, 10, 0, 11, 0, 2, 0, 11, 1, 10, 0, 12, 0, 6, 0, 13, 1, 11, 0, 4, 0, 12, 0, 13, 0, 13, 0, 0, 0)
nodes/fragment/0/position = Vector2(860, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_3fjwc")
nodes/fragment/2/position = Vector2(-460, 220)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_njngw")
nodes/fragment/6/position = Vector2(-100, 220)
nodes/fragment/7/node = SubResource("VisualShaderNodeTexture2DParameter_5plgy")
nodes/fragment/7/position = Vector2(-460, 660)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_5sdqx")
nodes/fragment/9/position = Vector2(-100, 660)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorLen_qmkws")
nodes/fragment/11/position = Vector2(-460, 540)
nodes/fragment/13/node = SubResource("VisualShaderNodeIf_r2jyq")
nodes/fragment/13/position = Vector2(359.619, 337.913)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_m87d3")
nodes/fragment/16/position = Vector2(-1380, 760)
nodes/fragment/17/node = SubResource("VisualShaderNodeTransformVecMult_58yf7")
nodes/fragment/17/position = Vector2(-1020, 760)
nodes/fragment/18/node = SubResource("VisualShaderNodeInput_0830b")
nodes/fragment/18/position = Vector2(-1400, 860)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorParameter_14x4q")
nodes/fragment/19/position = Vector2(-460, -440)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatParameter_sbor4")
nodes/fragment/20/position = Vector2(-460, 0)
nodes/fragment/21/node = SubResource("VisualShaderNodeFloatParameter_tw8xg")
nodes/fragment/21/position = Vector2(-460, -200)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorOp_ys7op")
nodes/fragment/22/position = Vector2(-720, 560)
nodes/fragment/23/node = SubResource("VisualShaderNodeVec3Parameter_r2yka")
nodes/fragment/23/position = Vector2(-1380, 540)
nodes/fragment/24/node = SubResource("VisualShaderNodeIf_y5e5j")
nodes/fragment/24/position = Vector2(360, -60)
nodes/fragment/25/node = SubResource("VisualShaderNodeTextureParameterTriplanar_k65cl")
nodes/fragment/25/position = Vector2(-820, -580)
nodes/fragment/26/node = SubResource("VisualShaderNodeInput_n3048")
nodes/fragment/26/position = Vector2(-1160, -340)
nodes/fragment/connections = PackedInt32Array(2, 0, 6, 2, 7, 0, 9, 2, 6, 0, 13, 4, 9, 0, 13, 5, 13, 0, 0, 0, 11, 0, 13, 0, 16, 0, 17, 0, 18, 0, 17, 1, 20, 0, 13, 2, 21, 0, 13, 1, 17, 0, 22, 1, 22, 0, 11, 0, 23, 0, 22, 0, 11, 0, 24, 0, 21, 0, 24, 1, 20, 0, 24, 2, 24, 0, 0, 5, 26, 0, 25, 1, 25, 0, 24, 3, 25, 0, 13, 3)
